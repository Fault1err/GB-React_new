{"ast":null,"code":"var _jsxFileName = \"/home/olika/GB-React_new/HW4/src/components/message-list/message-list.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef, useCallback } from \"react\"; // import PropTypes from \"prop-types\";\n\nimport { InputAdornment } from \"@mui/material\";\nimport { Message } from \"./message\";\nimport { Input, SendIcon } from \"./styles\";\nimport { useParams } from \"react-router-dom\"; // @TODO  переделать как в https://codesandbox.io/s/gbchat-router-7fg2fn?file=/src/App.js:1887-1898\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const MessageList = () => {\n  _s();\n\n  var _messageList$roomId2;\n\n  const [messageList, setMessageList] = useState({\n    room1: [{\n      author: \"User\",\n      message: \"test\",\n      date: new Date()\n    }]\n  });\n  const [value, setValue] = useState(\"\");\n  const {\n    roomId\n  } = useParams();\n  const ref = useRef();\n  const sendMessage = useCallback(function (message) {\n    let author = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"User\";\n\n    if (message) {\n      setMessageList(state => {\n        var _state$roomId;\n\n        return { ...state,\n          [roomId]: [...((_state$roomId = state[roomId]) !== null && _state$roomId !== void 0 ? _state$roomId : []), {\n            author,\n            message,\n            date: new Date()\n          }]\n        };\n      });\n      setValue(\"\");\n    }\n  }, [roomId]);\n\n  const handlePressInput = _ref => {\n    let {\n      code\n    } = _ref;\n\n    if (code === \"Enter\") {\n      sendMessage(value);\n    }\n  };\n\n  useEffect(() => {\n    if (ref.current) {\n      ref.current.scrollTo({\n        top: ref.current.scrollHeight,\n        left: 0,\n        behavior: \"smooth\"\n      });\n    }\n  }, [messageList]);\n  useEffect(() => {\n    var _messageList$roomId;\n\n    const messages = (_messageList$roomId = messageList[roomId]) !== null && _messageList$roomId !== void 0 ? _messageList$roomId : [];\n    const lastMessage = messages[messages.length - 1];\n    let timerId = null;\n\n    if (messages.length && lastMessage.author === \"User\") {\n      timerId = setTimeout(() => {\n        sendMessage(\"hello from bot\", \"Bot\");\n      }, 500);\n      return () => {\n        clearInterval(timerId);\n      };\n    }\n  }, [messageList, roomId, sendMessage]);\n  const messages = (_messageList$roomId2 = messageList[roomId]) !== null && _messageList$roomId2 !== void 0 ? _messageList$roomId2 : [];\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      ref: ref,\n      children: messages.map((message, index) => /*#__PURE__*/_jsxDEV(Message, {\n        message: message\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Input, {\n      autoFocus: true,\n      fullWidth: true,\n      placeholder: \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u0441\\u043E\\u043E\\u0431\\u0449\\u0435\\u043D\\u0438\\u0435...\",\n      value: value,\n      onChange: e => setValue(e.target.value),\n      onKeyPress: handlePressInput,\n      endAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n        position: \"end\",\n        children: value && /*#__PURE__*/_jsxDEV(SendIcon, {\n          onClick: sendMessage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 23\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}; // MessageList.propTypes = {\n//   message: PropTypes.string.isRequired,\n//   o1: PropTypes.shape({\n//     s1: PropTypes.string.isRequired,\n//   }).isRequired,\n//   a: PropTypes.arrayOf(\n//     PropTypes.shape({\n//       s1: PropTypes.string.isRequired,\n//     }).isRequired\n//   ).isRequired,\n// };\n\n_s(MessageList, \"m2FQ0+fjWNiYOWnDab6izhyZ8D4=\", false, function () {\n  return [useParams];\n});\n\n_c = MessageList;\n\nvar _c;\n\n$RefreshReg$(_c, \"MessageList\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useCallback","InputAdornment","Message","Input","SendIcon","useParams","MessageList","messageList","setMessageList","room1","author","message","date","Date","value","setValue","roomId","ref","sendMessage","state","handlePressInput","code","current","scrollTo","top","scrollHeight","left","behavior","messages","lastMessage","length","timerId","setTimeout","clearInterval","map","index","e","target"],"sources":["/home/olika/GB-React_new/HW4/src/components/message-list/message-list.js"],"sourcesContent":["import React, { useState, useEffect, useRef, useCallback } from \"react\";\n// import PropTypes from \"prop-types\";\nimport { InputAdornment } from \"@mui/material\";\nimport { Message } from \"./message\";\nimport { Input, SendIcon } from \"./styles\";\nimport { useParams } from \"react-router-dom\";\n\n// @TODO  переделать как в https://codesandbox.io/s/gbchat-router-7fg2fn?file=/src/App.js:1887-1898\nexport const MessageList = () => {\n  const [messageList, setMessageList] = useState({\n    room1: [{ author: \"User\", message: \"test\", date: new Date() }],\n  });\n  const [value, setValue] = useState(\"\");\n\n  const { roomId } = useParams();\n\n  const ref = useRef();\n\n  const sendMessage = useCallback(\n    (message, author = \"User\") => {\n      if (message) {\n        setMessageList((state) => ({\n          ...state,\n          [roomId]: [\n            ...(state[roomId] ?? []),\n            { author, message, date: new Date() },\n          ],\n        }));\n        setValue(\"\");\n      }\n    },\n    [roomId]\n  );\n\n  const handlePressInput = ({ code }) => {\n    if (code === \"Enter\") {\n      sendMessage(value);\n    }\n  };\n\n  useEffect(() => {\n    if (ref.current) {\n      ref.current.scrollTo({\n        top: ref.current.scrollHeight,\n        left: 0,\n        behavior: \"smooth\",\n      });\n    }\n  }, [messageList]);\n\n  useEffect(() => {\n    const messages = messageList[roomId] ?? [];\n    const lastMessage = messages[messages.length - 1];\n    let timerId = null;\n\n    if (messages.length && lastMessage.author === \"User\") {\n      timerId = setTimeout(() => {\n        sendMessage(\"hello from bot\", \"Bot\");\n      }, 500);\n\n      return () => {\n        clearInterval(timerId);\n      };\n    }\n  }, [messageList, roomId, sendMessage]);\n\n  const messages = messageList[roomId] ?? [];\n\n  return (\n    <>\n      <div ref={ref}>\n        {messages.map((message, index) => (\n          <Message message={message} key={index} />\n        ))}\n      </div>\n\n      <Input\n        autoFocus\n        fullWidth\n        placeholder=\"Введите сообщение...\"\n        value={value}\n        onChange={(e) => setValue(e.target.value)}\n        onKeyPress={handlePressInput}\n        endAdornment={\n          <InputAdornment position=\"end\">\n            {value && <SendIcon onClick={sendMessage} />}\n          </InputAdornment>\n        }\n      />\n    </>\n  );\n};\n\n// MessageList.propTypes = {\n//   message: PropTypes.string.isRequired,\n//   o1: PropTypes.shape({\n//     s1: PropTypes.string.isRequired,\n//   }).isRequired,\n//   a: PropTypes.arrayOf(\n//     PropTypes.shape({\n//       s1: PropTypes.string.isRequired,\n//     }).isRequired\n//   ).isRequired,\n// };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}